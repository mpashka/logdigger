<?xml version="1.0" encoding="utf-8"?>
<project name="logView" default="rebuild" basedir=".">

    <target name="init">

        <property name="version" value="2.6"/>
        <property name="revision" value="0"/>

        <property name="build.dir" value="${basedir}/build"/>
        <property name="src.dir" value="${basedir}/src"/>
        <property name="test-src.dir" value="${basedir}/test"/>
        <property name="classes.dir" value="${build.dir}/production/logView"/>
        <property name="test-classes.dir" value="${build.dir}/test/logView"/>
        <property name="bin.dir" value="${build.dir}/bin"/>
        <property name="lib.dir" value="${basedir}/lib"/>
        <property name="dist.dir" value="${build.dir}/dist"/>
        <property name="jar.file" value="${bin.dir}/lib/logView.jar"/>

        <path id="class.path">
            <fileset dir="${lib.dir}">
                <include name="*.jar"/>
            </fileset>
        </path>

        <path id="test-class.path">
            <path refid="class.path"/>
            <path location="${classes.dir}"/>
            <path location="${test-classes.dir}"/>
        </path>

        <taskdef name="xpath" classname="com.iv.ant.XPathProperty" classpathref="class.path"/>

        <exec executable="svn" output="info.xml">
            <arg line="info --non-interactive --xml --recursive"/>
        </exec>
        <xpath property="revision" file="info.xml"
               expression="iv:max(//descendant::commit/attribute::revision)"/>
        <echo message="max version number: ${revision}"/>
        <delete file="info.xml" failonerror="false"/>
        <exec executable="svn" output="status.xml">
            <arg line="status --xml"/>
        </exec>
        <xpath property="revision" value="dev" file="status.xml"
               expression="//status/target/entry/wc-status/attribute::item"/>
        <delete file="status.xml" failonerror="false"/>
        <echo message="version: ${version}.${revision}"/>
    </target>

    <target name="clean" depends="init">
        <delete dir="${classes.dir}" failonerror="false"/>
        <delete dir="${test-classes.dir}" failonerror="false"/>
        <delete dir="${bin.dir}" failonerror="false"/>
    </target>

    <target name="compile" depends="init">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}"
               destdir="${classes.dir}"
               classpathref="class.path"
               target="1.5"
               debug="true"
               optimize="true">
        </javac>
        <copy todir="${classes.dir}" preservelastmodified="true">
            <fileset dir="${src.dir}">
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
                <include name="**/*.xsd"/>
                <include name="**/*.png"/>
            </fileset>
        </copy>

        <fileset dir="${basedir}/xml" id="xml.files">
            <include name="*.xml"/>
        </fileset>
        <copy todir="${classes.dir}/META-INF" preservelastmodified="true">
            <fileset refid="xml.files"/>
        </copy>
        <pathconvert pathsep="," property="xml-files" refid="xml.files">
            <map from="${basedir}/xml/" to="META-INF/"/>
        </pathconvert>
        <echo message="xml-list: ${xml-files}" file="${classes.dir}/META-INF/xml-list.properties"/>

    </target>

    <target name="compile-test" depends="compile">
        <mkdir dir="${test-classes.dir}"/>
        <javac srcdir="${test-src.dir}"
               destdir="${test-classes.dir}"
               classpathref="test-class.path"
               target="1.5"
               debug="true"
               optimize="true">
        </javac>
    </target>

    <target name="test" depends="compile-test">
        <!--
                <junit fork="yes" haltonfailure="no">
                    <classpath refid="test-class.path"/>
                    <formatter type="plain" usefile="false"/>
                    <batchtest>
                        <fileset dir="${test-classes.dir}">
                            <include name="**/*.class"/>
                        </fileset>
                    </batchtest>
                </junit>
        -->
        <java classname="org.junit.runner.JUnitCore" fork="yes" failonerror="true">
            <arg value="com.iv.logView.io.TestRandomAccessReader"/>
            <arg value="com.iv.logView.io.TestIO"/>
            <arg value="com.iv.logView.TestPrefs"/>
            <classpath refid="test-class.path"/>
        </java>

    </target>

    <target name="build" description="build all" depends="compile">
        <mkdir dir="${bin.dir}/lib"/>
        <mkdir dir="${bin.dir}/xml"/>
        <tstamp>
            <format property="today" pattern="yyyy-MM-dd HH:mm:ss Z"/>
        </tstamp>
        <jar destfile="${jar.file}" duplicate="fail">
            <zipfileset dir="${classes.dir}" prefix=""/>
            <manifest>
                <attribute name="Implementation-Vendor" value="i-Vortex, Inc."/>
                <attribute name="Implementation-Vendor-Id" value="com.iv"/>
                <attribute name="Implementation-Version" value="${version}.${revision}"/>
                <attribute name="Built-Date" value="${today}"/>
                <attribute name="Main-Class" value="com.iv.logView.Main"/>
            </manifest>
        </jar>
        <copy todir="${bin.dir}/lib">
            <fileset dir="${lib.dir}">
                <exclude name="ant-xpath.jar"/>
                <exclude name="junit-4.1.jar"/>
            </fileset>
        </copy>
        <copy todir="${bin.dir}/xml">
            <fileset dir="${basedir}/xml"/>
        </copy>
        <copy todir="${bin.dir}">
            <fileset dir="${src.dir}">
                <include name="*.bat"/>
                <include name="*.sh"/>
            </fileset>
        </copy>
        <chmod perm="u+x" file="${bin.dir}/logView.sh"/>

        <signjar keystore="${basedir}/jws/logView.keystore" alias="logView" storepass="logView" lazy="true">
            <fileset dir="${bin.dir}/lib" includes="**/*.jar" />
        </signjar>
    </target>

    <target name="rebuild" description="rebuild all" depends="clean,build"/>

    <target name="dist" description="create distributive" depends="rebuild">
        <mkdir dir="${dist.dir}"/>
        <delete file="${dist.dir}/logView$-${version}.${revision}.zip" failonerror="false"/>
        <zip destfile="${dist.dir}/logView-${version}.${revision}.zip">
            <zipfileset dir="${bin.dir}" prefix="logView-${version}">
                <exclude name="log"/>
            </zipfileset>
        </zip>
    </target>

</project>